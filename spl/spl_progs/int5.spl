alias physicalSP S0;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);

// Get system call no. from the stack and put it in a register
alias sysCallNo S1;

sysCallNo = [physicalSP - 1];

// Get arguments from stack and put it in registers

if ( sysCallNo == 8) then
// Implementation of Fork 
	//Finding a free PCB
	alias newPID S2;
	newPID = 0;
	while(newPID < 32) do
		if([READY_LIST + newPID*32 + 1] == 0) then
			break;
		endif;
		newPID = newPID + 1;
	endwhile;
	if(newPID == 32) then
		[physicalSP - 2] = -1;
		ireturn;
	endif;
	
	[READY_LIST + newPID*32] = newPID; //Set PIDA
	[READY_LIST + newPID*32 + 1] = 1;
	[READY_LIST + newPID*32 + 5] = 1024 + newPID*8; //Set PTBR
	[READY_LIST + newPID*32 + 6] = 4; //Set PTLR
 	[READY_LIST + newPID*32 + 4] = [physicalSP]; //Set IP
	[READY_LIST + newPID*32 + 3] = SP - 1;
	[READY_LIST + newPID*32 + 2] = BP;
	[READY_LIST + newPID*32 + 7] = R0;
	[READY_LIST + newPID*32 + 8] = R1;
	[READY_LIST + newPID*32 + 9] = R2;
	[READY_LIST + newPID*32 +10] = R3;
	[READY_LIST + newPID*32 +11] = R4;
	[READY_LIST + newPID*32 +12] = R5;
	[READY_LIST + newPID*32 +13] = R6;
	[READY_LIST + newPID*32 +14] = R7;
	
	alias counter S3;
	counter = 15;
	while (counter < 30) do
		[READY_LIST + newPID*32 + counter] = [READY_LIST + (PTBR - 1024)/8*32 + counter];
		[READY_LIST + newPID*32 + counter + 1] = [READY_LIST + (PTBR - 1024)/8*32 + counter + 1];
		if([READY_LIST + (PTBR - 1024)/8*32 + counter] != -1) then
			[1344 + [READY_LIST + (PTBR - 1024)/8*32 + counter]*2 + 1] = [1344 + [READY_LIST + (PTBR - 1024)/8*32 + counter]*2 + 1] + 1;
		endif;
		counter = counter + 2;
	endwhile;

	


	counter = 0;
	alias free S4;
	free = 0;
	while(counter < 64) do
		if ([1280 + counter] == 0) then
			free = free + 1;
		endif;
		if(free == PTLR) then
			break;
		endif;
		counter = counter + 1;
	endwhile;
	if(counter == 64) then
		[physicalSP - 2] = -1;
		ireturn;
	endif;
	
	counter = 0;

	//setting new PageTable
	while (counter < PTBR) do
		alias i S4;
		i = 0;
		if([PTBR + counter*2 + 1] == "00") then
			[1024 + new*8 + counter*2 + 1] = [PTBR + counter*2 +1];  //ask piyush, incomplete (4v)
			continue;
		endif;
		while(i < 64) do
			if([1280 + i] == 0) then
				[1280 + i] = 1;
				alias j S5;
				j = 0;
				while (j<512) do 
					[i*512 + j] = [(PTBR + counter*2)*512 + j];
					j = j + 1;
				endwhile;
				[1024 + newPID*8 + counter*2] = i;
				[1024 + newPID*8 + counter*2 + 1] = [PTBR + counter + 1];
					
				break;
			endif;
			i = i + 1;
		endwhile;
	endwhile;
	
	[physicalSP - 2] = newPID;
	alias childPhysicalSP S6;
	childPhysicalSP = [1024 + newPID*8 + (SP - 1)*2/512] + SP%512;
	[childPhysicalSP - 2] = -2;
	ireturn;
endif;
